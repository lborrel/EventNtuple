#include "Offline/Filters/fcl/prolog.fcl"
#include "Offline/Compression/fcl/prolog.fcl"
#include "Offline/fcl/TrkCaloDt.fcl"
BEGIN_PROLOG
# Track quality module
# Example of how to add a new training through fcl
# -- trainName is the name of the training
# -- xmlFileName is the name of the XML file
#  YourNewTrkQualConfig : { trainName : "YourNewTrkQual"
#                     xmlFileName : "path/to/YourNewTrkQual.weights.xml"
#             }
#  TrkQualCatalog.mvaConfigs : [ @sequence::TrkQualCatalog.mvaConfigs, @local::YourNewTrkQualConfig  ]

TrkQual : {
  module_type : TrackQuality
}
TrkQualNeg : @local::TrkQual
TrkQualNeg.TrainingName : "TrkQualNeg"
TrkQualPos : @local::TrkQual
TrkQualPos.TrainingName : "TrkQualPos"

TrkQualDeM           : @local::TrkQualNeg
TrkQualDeM.KalSeedCollection : "KKDeM"
TrkQualUeM           : @local::TrkQualNeg
TrkQualUeM.KalSeedCollection : "KKUeM"
TrkQualDmuM          : @local::TrkQualNeg
TrkQualDmuM.KalSeedCollection : "KKDmuM"
TrkQualUmuM          : @local::TrkQualNeg
TrkQualUmuM.KalSeedCollection : "KKUmuM"
TrkQualDeP           : @local::TrkQualPos
TrkQualDeP.KalSeedCollection : "KKDeP"
TrkQualUeP           : @local::TrkQualPos
TrkQualUeP.KalSeedCollection : "KKUeP"
TrkQualDmuP          : @local::TrkQualPos
TrkQualDmuP.KalSeedCollection : "KKDmuP"
TrkQualUmuP          : @local::TrkQualPos
TrkQualUmuP.KalSeedCollection : "KKUmuP"

TrkQualProducers : {
  TrkQualDeM : @local::TrkQualDeM
  TrkQualUeM : @local::TrkQualUeM
  TrkQualDeP : @local::TrkQualDeP
  TrkQualUeP : @local::TrkQualUeP
  TrkQualDmuM : @local::TrkQualDmuM
  TrkQualDmuP : @local::TrkQualDmuP
  TrkQualUmuM : @local::TrkQualUmuM
  TrkQualUmuP : @local::TrkQualUmuP
}
TrkQualProducersPath : [ TrkQualDeM, TrkQualUeM, TrkQualDmuM, TrkQualDeP, TrkQualUeP, TrkQualDmuP, TrkQualUmuM, TrkQualUmuP ]


# track PID module
TrkPID : {
  module_type : TrackPIDV2
  MaxDE : 5.0 # MeV
  DeltaTOffset : -1.15 # specific to MDC2018h
  MVAConfig : { MVAWeights : "Offline/TrkDiag/data/TrkCaloHitPID.weights.xml"}
}
# this module only makes sense for downstream electron fits
TrkPIDDeM          : @local::TrkPID
TrkPIDDeM.KalSeedCollection : "KKDeM"
TrkPIDDeP          : @local::TrkPID
TrkPIDDeP.KalSeedCollection : "KKDeP"
TrkPIDProducers : {
  TrkPIDDeM : @local::TrkPIDDeM
  TrkPIDDeP : @local::TrkPIDDeP
}
TrkPIDProducersPath : [ TrkPIDDeM, TrkPIDDeP ]

# DIO weighting for flat spectrum electrons
DIOWeight: {
  module_type: DecayInOrbitWeight
  weightingScheme : pol58
  inputModule : compressDigiMCs
  verbosityLevel: 1
}
# converts ProtonBunchIntensity object to EventWeight object
PBIWeight : {
  module_type : PBIWeight
  PBITag : "PBISim"
  meanPBITag : "PBISim:MeanIntensity"
}
#Example configuration of RMCWeightModule
RMCWeight : {
  module_type : RMCWeight
  kinematic_endpoint : 100
  internalConversion : 1
  verbosityLevel : 0
}
dioLLWeight : {
  module_type : BinnedSpectrumWeight
  genParticleTag : "compressDigiMCs"
  genParticlePdgId : 11
  genParticleGenId : dioTail
  spectrumFileName : "Offline/ConditionsService/data/czarnecki_szafron_Al_2016.tbl"
  BinCenter : false
}
genCountLogger: { module_type: GenEventCountReader }

AllOpt : { fillMC : true
  trkqual : "TrkQual"
  fillTrkQual : true
  trkpid : "TrkPID"
  fillTrkPID : true
  fillHits : true
  genealogyDepth : -1
}

DeM : { input : "KK"
  branch : "dem"
  suffix : "DeM"
}
UeM : { input : "KK"
  branch : "uem"
  suffix : "UeM"
}
DmuM : { input : "KK"
  branch : "dmm"
  suffix : "DmuM"
}
UmuM : { input : "KK"
  branch : "umm"
  suffix : "UmuM"
}
DeP : { input : "KK"
  branch : "dep"
  suffix : "DeP"
}
UeP : { input : "KK"
  branch : "uep"
  suffix : "UeP"
}
DmuP : { input : "KK"
  branch : "dmp"
  suffix : "DmuP"
}
UmuP : { input : "KK"
  branch : "ump"
  suffix : "UmuP"
}
Ext : { input : "KK"
  branch : "kl"
  suffix : "Line"
}


TrkAnaTreeMaker : {
  module_type : TrkAnaTreeMaker
  RecoCountTag : "SelectRecoMC"
  PBITag : "PBISim"
  PBTTag : "EWMProducer"
  PBTMCTag : "EWMProducer"
  CrvCoincidencesTag : "SelectRecoMC:CrvCoincidenceClusterFinder"
  CrvCoincidenceMCsTag : "compressRecoMCs:CrvCoincidenceClusterMatchMC"
  CrvRecoPulsesTag : "SelectRecoMC"
  CrvStepsTag : "compressRecoMCs"
  SimParticlesTag : "compressRecoMCs"
  MCTrajectoriesTag : "compressRecoMCs"
  CrvDigiMCsTag : "compressRecoMCs"
  CrvDigisTag : "SelectRecoMC"
  CrvCoincidenceClusterMCAssnsTag : "CrvCoincidenceClusterMCAssns"
  CrvPlaneY : 2653
  FillMCInfo : true
  FillTrkQualInfo : true
  FillTrkPIDInfo : true
  FillHitInfo : false
  FillTriggerInfo : true
  TriggerProcessName : "Mix"
  ProcessEmptyEvents : false
  FillCRVHits : true
  FillCRVPulses : false
  PrimaryParticleTag : "compressRecoMCs"
  KalSeedMCAssns : "SelectRecoMC"
  CaloClusterMCTag : "compressRecoMCs"
  InfoMCStructHelper : {
    SimParticleCollectionTag : "compressRecoMCs"
    MinGoodMomFraction : 0.9
    MaxVDDt : 5 # ns
  }
}

TrkAnaReco : {

  producers: {
    PBIWeight : @local::PBIWeight
    @table::TrkQualProducers
    @table::TrkPIDProducers
  }

  analyzers : {
    TrkAnaNeg : { @table::TrkAnaTreeMaker
      candidate : @local::DeM
      supplements : [ @local::UeM, @local::DmuM ]
      ExtraMCStepCollectionTags : [ "compressRecoMCs:protonabsorber", "compressRecoMCs:stoppingtarget" ]
    }
    TrkAnaPos : { @table::TrkAnaTreeMaker
      candidate : @local::DeP
      supplements : [ @local::UeP, @local::DmuP ]
      ExtraMCStepCollectionTags : [ "compressRecoMCs:protonabsorber", "compressRecoMCs:stoppingtarget" ]
    }
    TrkAnaExt : { @table::TrkAnaTreeMaker
      candidate : @local::Ext
      supplements : [ ]
      ExtraMCStepCollectionTags : [ "compressRecoMCs:protonabsorber", "compressRecoMCs:stoppingtarget" ]
    }

    genCountLogger : @local::genCountLogger
  }

  TrigSequence : [ PBIWeight, @sequence::TrkQualProducersPath, @sequence::TrkPIDProducersPath ]
  EndSequenceNoMC : [ TrkAnaNeg, TrkAnaPos ]
  EndSequence : [ TrkAnaNeg, TrkAnaPos, genCountLogger ]

}

END_PROLOG
