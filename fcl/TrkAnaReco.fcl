#include "Offline/fcl/minimalMessageService.fcl"
#include "Offline/fcl/standardProducers.fcl"
#include "Offline/fcl/standardServices.fcl"
#include "TrkAna/fcl/prolog.fcl"

process_name : TrkAnaReco

source : { module_type : RootInput }

services : @local::Services.Reco

physics :
{
  producers : {
    @table::TrkAnaReco.producers
    PBIWeight : @local::PBIWeight
  }
  analyzers : { @table::TrkAnaReco.analyzers }
}

physics.TrkAnaTrigPath : [ PBIWeight, TrkQualDeM ]
physics.TrkAnaEndPath : [ @sequence::TrkAnaReco.EndSequence ]

# Include more information (MC, full TrkQual and TrkPID branches)
physics.analyzers.TrkAnaNeg.candidate.options : @local::AllOpt
physics.analyzers.TrkAnaPos.candidate.options : @local::AllOpt

# for hit level diagnostics, set diagLevel to 2
physics.analyzers.TrkAnaNeg.diagLevel : 1
physics.analyzers.TrkAnaNeg.FillMCInfo : true
physics.analyzers.TrkAnaNeg.FillCRVHits : true
physics.analyzers.TrkAnaNeg.FillTriggerInfo : false
physics.analyzers.TrkAnaNeg.FitType : LoopHelix

physics.analyzers.TrkAnaPos.diagLevel : 1
physics.analyzers.TrkAnaPos.FillMCInfo : true
physics.analyzers.TrkAnaPos.FillCRVHits : true
physics.analyzers.TrkAnaPos.FillTriggerInfo : false
physics.analyzers.TrkAnaPos.FitType : LoopHelix

physics.analyzers.TrkAnaNeg.FillTrkPIDInfo : false

physics.analyzers.TrkAnaPos.FillTrkPIDInfo : false


services.TFileService.fileName: "nts.owner.trkana-reco.version.sequencer.root"
